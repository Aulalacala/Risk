@model Risk.ViewModels.AssignMultipleRiskVM
@{
    ViewBag.Title = "AssignMultipleRisks";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<h2>Assign Multiple Risks</h2>
<div class="panel" style="margin-top:30px;">
    <div class="panel-body" style="background-color:white">

        <span class="title">RISK</span>

        <div class="clearfix"></div>
        <div class="divider"></div>
        <br />

        <div>
            <div id="botonera" class="pull-right">
                <input type="submit" class="btn btn-primary" name="BtnSave" value="SAVE" id="BtnSave" />
                <input type="submit" class="btn btn-primary" name="BtnExit" value="EXIT" id="BtnExit" />
            </div>
        </div>

        <div class="clearfix"></div>
        <div class="divider"></div>
        <br />



        <div class="row">
            <div class="col-lg-12 col-md-12" style="width:100%">

                <div class="col-lg-5 col-md-5" style="padding:10px ;width:45%;border: 1px solid #cbcbcb">
                    <div id="tablaRiesgosSinAsignar" class="divDelGrid table-responsive" style="width:100%;height:500px;">
                        @Html.Partial("~/Views/PartialViews/TablaDatos.cshtml", Model.datosTablaSinAsignar)
                    </div>
                </div>                

                <div class="col-lg-2 col-md-2" style="width:10%; height:500px">
                    <div>
                        <input type="button" class="btn btn-primary" name="BtnAsignar" value="<<" id="delStructure" codigo="delStructure" />
                        <input type="button" class="btn btn-primary" name="BtnAsignar" value=">>" id="addStructure" codigo="addStructure" />
                    </div>
                </div>


                <div class="col-lg-5 col-md-5" style="padding:10px;width:45%;border: 1px solid #cbcbcb">

                    @* DROPDOWN CON TODOS LOS ELEMENTOS DE LA ESTRUCUTURA *@
                    <span class="form-left-label">Structure Code</span>
                    <select class="form-control w100" campos="campos" id="idEstructura">
                        @{ Dictionary<int, string> structureCode = Model.dropDownStructure.structureCode;

                            foreach (var structure in structureCode) {
                                if (structure.Key == Model.idEstructura) {
                                    <option value="@structure.Key" selected>@structure.Value </option>
                                }
                                <option value="@structure.Key">@structure.Value </option>
                            }
                        }
                    </select>
</div>




                    <div class="col-lg-5 col-md-5" style="padding:10px;width:45%;border: 1px solid #cbcbcb">

                        <div id="datosTablaAsignados" class="divDelGrid table-responsive" style="width:100%;height:500px;">
                            @Html.Partial("~/Views/PartialViews/TablaDatos.cshtml", Model.datosTablaAsignados)
                        </div>
                    </div>

                </div>
        </div>

    </div>
</div>

<script>
    $(document).ready(function () {


        // Cambio de nombre de las tablas por defecto (TablaDatos.cshtml) para que sean distintos
        $('#datosTablaAsignados table').attr('id', 'datosTablaAsignados');
        $('#tablaRiesgosSinAsignar table').attr('id', 'tablaRiesgosSinAsignar');



        // Asignacion de las tablas a 'DataTable' para poder usar sus metodos (add)
        var tableAsignados = $('table[id=datosTablaAsignados]').DataTable({
                                "bPaginate": false,
                                "bFilter": false,
                                "bInfo": false,
                                retrieve: true
        })


        var tablaRiesgosSinAsignar = $('table[id=tablaRiesgosSinAsignar]').DataTable({
                                "bPaginate": false,
                                "bFilter": false,
                                "bInfo": false,
                                retrieve: true
        })


        // Evento para seleccionar filas de las tablas
        $('#datosTablaAsignados tbody').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                $('#datosTablaAsignados tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
        });

        $('#tablaRiesgosSinAsignar tbody').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                $('#tablaRiesgosSinAsignar tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
        });



        // Eventos botones para añadir o quitar riesgos de una tabla a otra
        $('input[id*="Structure"]').click(function () {

            var row;
            var tablaAdd;
            var tablaDelete;


            if ($(this).attr('codigo') == "addStructure") {
                tablaAdd = tableAsignados;
                tablaDelete = tablaRiesgosSinAsignar;   
                row = tablaDelete.row($('table[id=tablaRiesgosSinAsignar] tr.selected'));

            }

            else {
                tablaAdd = tablaRiesgosSinAsignar;
                tablaDelete = tableAsignados;
                row = tablaDelete.row($('table[id=datosTablaAsignados] tr.selected'));

            }

            var rowNode = row.node();
            $(rowNode).addClass('dirty');
            $(rowNode).css({ "color": "#d43f3a" })
            row.remove();

            tablaAdd
                .row.add(rowNode)
                .draw();

            $('#BtnSave').removeClass('btn-primary').addClass('btn-danger');

        })


        // Guardar cambios
        $('#BtnSave').click(function () {
            var asignados = [];
            var sinasignar = [];
            var idEstructura;

            // guardar los añadidos en la tabla con riesgos SIN estructura
            // en el metodo del controlador AssignController --> borrado de CodRiesgo y CodRiesgoLocalizado de tabla tRiesgos
            // y borrado de la tupla con ese idRiesgo en la tabla tRelEstructuraRiesgos
            tablaRiesgosSinAsignar.rows().every(function (rowIdx, tableLoop, rowLoop) {
                var rowNode = this.node();

                if ($(rowNode).hasClass('dirty')) {
                    var idRiesgo = this.data()[0].split('id="')[1].split('"')[0];
                    idEstructura = 0;

                    sinasignar.push(idRiesgo);
                }
            });

            if (sinasignar.length != 0) {
                $.ajax({
                    url: '/Assign/guardarCambiosMultipleRisk',
                    type: 'post',
                    data: { riesgos: sinasignar, idEstructura: idEstructura },
                    success: function (data) {
                        alert(data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert('ERROR ' + jqXHR + ' ' + textStatus + ' ' + errorThrown)
                    }
                });
            };

            // guardar los añadidos en la tabla con riesgos CON estructura
            // en el metodo del controlador AssignController --> poner CodRiesgo y CodRiesgoLocalizado de tabla tRiesgos con la estructura seleccionada
            // e insertar ese riesgo con esa estructura en la tabla tRelEstructuraRiesgos
            tableAsignados.rows().every(function (rowIdx, tableLoop, rowLoop) {
                var rowNode = this.node();

                if ($(rowNode).hasClass('dirty')) {
                    var idRiesgo = this.data()[0].split('id="')[1].split('"')[0];
                    idEstructura = $('#idEstructura').val();

                    asignados.push(idRiesgo);
                };
            });

            if (asignados.length != 0) {
                $.ajax({
                    url: '/Assign/guardarCambiosMultipleRisk',
                    type: 'post',
                    data: { riesgos: asignados, idEstructura: idEstructura },
                    success: function (data) {
                        alert(data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert('ERROR ' + jqXHR + ' ' + textStatus + ' ' + errorThrown)
                    }
                });
            };

        });

    });




</script>

