@using Risk.Helpers
@model List<Risk.Controllers.TreeViewLocation>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript" src="~/Content/js/jquery/jquery-2.1.1.min.js"></script>
<script type="text/javascript" src="~/Content/js/jquery/jquery.browser.min.js"></script>
<script type="text/javascript" src="~/Content/js/jquery/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="~/Content/js/bootstrap/bootstrap.min.js"></script>
<script type="text/javascript" src="~/Content/js/bootstrap/bootstrap-metis.menu.min.js"></script>
<script type="text/javascript" src="~/Content/js/bootstrap/bootstrap-datepicker.min.js"></script>
<link rel="stylesheet" href="~/Content/treed/treed.css" type="text/css" media="screen" />

<h2>PRUEBA DE ESTRUCTURA</h2>

@(Html.TreeView(Model)
    .EmptyContent("No locations have been defined yet!")
    .Children(m => m.ChildLocations)
    .HtmlAttributes(new { id = "tree" })
    .ChildrenHtmlAttributes(new { @class = "subItem" })
    .ItemText(m => m.Name)
    .ItemTemplate(
    @<text>
        <a href="#@item.Id">@item.Name</a>
    </text>)
)

<script>

    $.fn.extend({
        treed: function (o) {

            var openedClass = 'glyphicon-minus-sign';
            var closedClass = 'glyphicon-plus-sign';

            if (typeof o != 'undefined') {
                if (typeof o.openedClass != 'undefined') {
                    openedClass = o.openedClass;
                }
                if (typeof o.closedClass != 'undefined') {
                    closedClass = o.closedClass;
                }
            };

            //initialize each of the top levels
            var tree = $(this);
            tree.addClass("tree");
            tree.find('li').has("ul").each(function () {
                var branch = $(this); //li with children ul
                branch.prepend("<i class='indicator glyphicon " + closedClass + "'></i>");
                branch.addClass('branch');
                branch.on('click', function (e) {
                    if (this == e.target) {
                        var icon = $(this).children('i:first');
                        icon.toggleClass(openedClass + " " + closedClass);
                        $(this).children().children().toggle();
                    }
                })
                branch.children().children().children().children().toggle();
                //branch.children().children().toggle();
            });
            //fire event from the dynamically added icon
            tree.find('.branch .indicator').each(function () {
                $(this).on('click', function () {
                    $(this).closest('li').click();
                });
            });
            //fire event to open branch if the li contains an anchor instead of text
            tree.find('.branch>a').each(function () {
                $(this).on('click', function (e) {
                    $(this).closest('li').click();
                    e.preventDefault();
                });
            });
            //fire event to open branch if the li contains a button instead of text
            tree.find('.branch>button').each(function () {
                $(this).on('click', function (e) {
                    $(this).closest('li').click();
                    e.preventDefault();
                });
            });
        }
    });

    //Initialization of treeview
    $('#tree').treed({ openedClass: 'glyphicon-chevron-right', closedClass: 'glyphicon-chevron-down' });

</script>